[{"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/index.js":"1","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/reportWebVitals.js":"2","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/store.js":"3","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/layout/Layout.jsx":"4","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/reducers/orderReducer.js":"5","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/reducers/ThemeReducer.js":"6","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/reducers/productReducers.js":"7","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/reducers/dashboardReducers.js":"8","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/reducers/userReducers.js":"9","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/actions/ThemeAction.js":"10","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/Routes.jsx":"11","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/constants/dashboardConstant.js":"12","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/sidebar/Sidebar.jsx":"13","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/topnav/TopNav.jsx":"14","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/constants/orderConstants.js":"15","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/constants/productConstant.js":"16","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/constants/userConstants.js":"17","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/actions/userActions.js":"18","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/LoginScreen.js":"19","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/OrderListScreen.js":"20","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/UserListScreen.js":"21","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/productListScreen.js":"22","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/UserTrashScreen.js":"23","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/OrderScreen.js":"24","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/ProductTrashScreen.js":"25","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/AddProductScreen.js":"26","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/UserEditScreen.js":"27","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/ProductEditScreen.js":"28","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/AnalyticsScreen.js":"29","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/Dashboard.jsx":"30","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/thememenu/ThemeMenu.jsx":"31","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/dropdown/Dropdown.jsx":"32","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/FormContainer.js":"33","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/actions/orderActions.js":"34","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/StatusSteps.js":"35","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/Rating.js":"36","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/actions/productActions.js":"37","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/RenderImages.js":"38","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/formatVNDC.js":"39","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/loader/Loader.js":"40","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/message/Message.js":"41","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/Paginates/PaginateOrder.js":"42","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/Paginates/PaginateProduct.js":"43","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/Paginates/PaginateUser.js":"44","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/Paginates/PaginateTrashUser.js":"45","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/Paginates/PaginateTrashProduct.js":"46","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/actions/dashboardActions.js":"47","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/badge/Badge.jsx":"48","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/status-card/StatusCard.jsx":"49","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/table/Table.jsx":"50"},{"size":861,"mtime":1669211863787,"results":"51","hashOfConfig":"52"},{"size":362,"mtime":1658035780550,"results":"53","hashOfConfig":"52"},{"size":2926,"mtime":1670658228807,"results":"54","hashOfConfig":"52"},{"size":1323,"mtime":1669197794069,"results":"55","hashOfConfig":"52"},{"size":3955,"mtime":1669697470038,"results":"56","hashOfConfig":"52"},{"size":399,"mtime":1658035780550,"results":"57","hashOfConfig":"52"},{"size":7001,"mtime":1670768147304,"results":"58","hashOfConfig":"52"},{"size":1416,"mtime":1669478753813,"results":"59","hashOfConfig":"52"},{"size":5054,"mtime":1669822780052,"results":"60","hashOfConfig":"52"},{"size":364,"mtime":1659514027262,"results":"61","hashOfConfig":"52"},{"size":2541,"mtime":1670570586129,"results":"62","hashOfConfig":"52"},{"size":515,"mtime":1669477965239,"results":"63","hashOfConfig":"52"},{"size":1321,"mtime":1670778164559,"results":"64","hashOfConfig":"52"},{"size":3305,"mtime":1669822724772,"results":"65","hashOfConfig":"52"},{"size":1459,"mtime":1669559700719,"results":"66","hashOfConfig":"52"},{"size":2689,"mtime":1670657957025,"results":"67","hashOfConfig":"52"},{"size":1988,"mtime":1669820077001,"results":"68","hashOfConfig":"52"},{"size":8347,"mtime":1669822550973,"results":"69","hashOfConfig":"52"},{"size":2099,"mtime":1669492726615,"results":"70","hashOfConfig":"52"},{"size":3686,"mtime":1670338369369,"results":"71","hashOfConfig":"52"},{"size":3628,"mtime":1670592738919,"results":"72","hashOfConfig":"52"},{"size":4800,"mtime":1670657145868,"results":"73","hashOfConfig":"52"},{"size":4203,"mtime":1669822652072,"results":"74","hashOfConfig":"52"},{"size":9167,"mtime":1669822884646,"results":"75","hashOfConfig":"52"},{"size":4409,"mtime":1669822981198,"results":"76","hashOfConfig":"52"},{"size":4179,"mtime":1670593042190,"results":"77","hashOfConfig":"52"},{"size":3128,"mtime":1669819397507,"results":"78","hashOfConfig":"52"},{"size":13837,"mtime":1670870813768,"results":"79","hashOfConfig":"52"},{"size":3460,"mtime":1669912942460,"results":"80","hashOfConfig":"52"},{"size":7673,"mtime":1669911523075,"results":"81","hashOfConfig":"52"},{"size":4894,"mtime":1669197837113,"results":"82","hashOfConfig":"52"},{"size":1817,"mtime":1658035780546,"results":"83","hashOfConfig":"52"},{"size":331,"mtime":1669192393130,"results":"84","hashOfConfig":"52"},{"size":5895,"mtime":1669560307603,"results":"85","hashOfConfig":"52"},{"size":785,"mtime":1669558019072,"results":"86","hashOfConfig":"52"},{"size":1726,"mtime":1669910992419,"results":"87","hashOfConfig":"52"},{"size":10108,"mtime":1670864703217,"results":"88","hashOfConfig":"52"},{"size":713,"mtime":1670597398117,"results":"89","hashOfConfig":"52"},{"size":162,"mtime":1670571658596,"results":"90","hashOfConfig":"52"},{"size":384,"mtime":1669192353720,"results":"91","hashOfConfig":"52"},{"size":238,"mtime":1669192433231,"results":"92","hashOfConfig":"52"},{"size":739,"mtime":1669489934486,"results":"93","hashOfConfig":"52"},{"size":741,"mtime":1669483377491,"results":"94","hashOfConfig":"52"},{"size":742,"mtime":1669821076216,"results":"95","hashOfConfig":"52"},{"size":746,"mtime":1669821010606,"results":"96","hashOfConfig":"52"},{"size":746,"mtime":1669733700025,"results":"97","hashOfConfig":"52"},{"size":1704,"mtime":1669478542487,"results":"98","hashOfConfig":"52"},{"size":216,"mtime":1658035780546,"results":"99","hashOfConfig":"52"},{"size":448,"mtime":1658035780548,"results":"100","hashOfConfig":"52"},{"size":2402,"mtime":1658035780548,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mgpk0",{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/index.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/reportWebVitals.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/store.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/layout/Layout.jsx",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/reducers/orderReducer.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/reducers/ThemeReducer.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/reducers/productReducers.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/reducers/dashboardReducers.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/reducers/userReducers.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/actions/ThemeAction.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/Routes.jsx",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/constants/dashboardConstant.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/sidebar/Sidebar.jsx",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/topnav/TopNav.jsx",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/constants/orderConstants.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/constants/productConstant.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/constants/userConstants.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/actions/userActions.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/LoginScreen.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/OrderListScreen.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/UserListScreen.js",["208"],"import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/message/Message'\nimport Loader from '../components/loader/Loader'\nimport Paginate from '../components/Paginates/PaginateUser'\nimport { getListUsers, deleteUser } from '../actions/userActions'\nconst UserListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n  const dispatch = useDispatch()\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users, page, pages } = userList\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete } = userDelete\n  useEffect(() => {\n    if (userInfo && userInfo.data.user.isAdmin) {\n      dispatch(getListUsers(pageNumber))\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, successDelete, userInfo])\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure you want to delete')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <>\n      <h1> Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm '>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>EMAIL</th>\n                <th>ADMIN</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users &&\n                users.map((user) => (\n                  <tr key={user._id}>\n                    <td>{user._id}</td>\n                    <td>{user.name}</td>\n                    <td>\n                      <a href={`mailto:${user.email}`}>{user.email}</a>\n                    </td>\n                    <td>\n                      {user.isAdmin ? (\n                        <i\n                          className='fas fa-check'\n                          style={{ color: 'green' }}\n                        ></i>\n                      ) : (\n                        <i\n                          className='fas fa-times'\n                          style={{ color: 'red' }}\n                        ></i>\n                      )}\n                    </td>\n                    <td>\n                      <LinkContainer to={`/user/${user._id}/edit`}>\n                        <Button variant='light' className='btn-sm'>\n                          <i className='fas fa-edit'></i>\n                        </Button>\n                      </LinkContainer>\n                      <Button\n                        variant='danger'\n                        className='btn-sm'\n                        onClick={() => deleteHandler(user._id)}\n                      >\n                        <i className='fas fa-trash'></i>\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n          <Row className='align-items-center'>\n            <Col className='text-left'>\n              <LinkContainer className='my-3' to='/customersTrash'>\n                <Button>\n                  <i className='fas fa-trash'></i> Thùng Rác\n                </Button>\n              </LinkContainer>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default UserListScreen\n","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/productListScreen.js",["209"],"import React, { useEffect } from 'react'\n\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/message/Message'\nimport Loader from '../components/loader/Loader'\nimport Paginate from '../components/Paginates/PaginateProduct'\nimport Rating from '../components/Rating'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstant'\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productListReducer = useSelector((state) => state.productListReducer)\n  const { loading, error, products, page, pages } = productListReducer\n\n  const productDelete = useSelector((state) => state.productDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete\n\n  const productCreate = useSelector((state) => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n\n    if (!userInfo || !userInfo.data.user.isAdmin) {\n      history.push('/login')\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n  const formatVNDC = (price) => {\n    return Intl.NumberFormat('it-IT', {\n      style: 'currency',\n      currency: 'VND',\n    }).format(price)\n  }\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col className='col-8'>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right col-4 '>\n          <LinkContainer to='/addproduct' className='my-3'>\n            <Button>\n              <i className='fas fa-plus'></i> Create Product\n            </Button>\n          </LinkContainer>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>RATING</th>\n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>{formatVNDC(product.price)}</td>\n                  <td>\n                    <Rating\n                      value={product.rating}\n                      text={`${product.numReviews} review`}\n                      color=\"'#f8e825'\"\n                    />\n                  </td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n          <Row className='align-items-center'>\n            <Col className='text-left'>\n              <LinkContainer className='my-3' to='/productsTrash'>\n                <Button>\n                  <i className='fas fa-trash'></i> Thùng Rác\n                </Button>\n              </LinkContainer>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen\n","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/UserTrashScreen.js",["210"],"import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col, Nav } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/message/Message'\nimport Loader from '../components/loader/Loader'\nimport Paginate from '../components/Paginates/PaginateTrashUser'\nimport {\n  getTrashListUsers,\n  forceUser,\n  restoreUser,\n} from '../actions/userActions'\nconst UserTrashScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n  const dispatch = useDispatch()\n  const userTrashList = useSelector((state) => state.userTrashList)\n  const { loading, error, users, page, pages } = userTrashList\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n  const userRestore = useSelector((state) => state.userRestore)\n  const { success: successRestore } = userRestore\n  const userForce = useSelector((state) => state.userForce)\n  const { success: successForce } = userForce\n  useEffect(() => {\n    if (userInfo && userInfo.data.user.isAdmin) {\n      dispatch(getTrashListUsers(pageNumber))\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo, successRestore, successForce])\n  const restoreHandler = (id) => {\n    if (window.confirm('Are you sure you want to restore')) {\n      dispatch(restoreUser(id))\n    }\n  }\n  const forceHandler = (id) => {\n    if (window.confirm('Are you sure you want to delete')) {\n      dispatch(forceUser(id))\n    }\n  }\n  // {\n  //   users && users.users.map((user) => console.log(user))\n  // }\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col className='text-left'>\n          <LinkContainer className='my-3' to='/customers'>\n            <Nav.Link>\n              <Button>\n                <i class='fa-solid fa-arrow-left'></i> Quay lại\n              </Button>\n            </Nav.Link>\n          </LinkContainer>\n        </Col>\n      </Row>\n      <Row className='align-items-center'>\n        <Col className='col-8'>\n          <i className='fas fa-trash'></i>Thùng rác\n        </Col>\n      </Row>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm '>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>EMAIL</th>\n                <th>ADMIN</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users &&\n                users.map((user) => (\n                  <tr key={user._id}>\n                    <td>{user._id}</td>\n                    <td>{user.name}</td>\n                    <td>\n                      <a href={`mailto:${user.email}`}>{user.email}</a>\n                    </td>\n                    <td>\n                      {user.isAdmin ? (\n                        <i\n                          className='fas fa-check'\n                          style={{ color: 'green' }}\n                        ></i>\n                      ) : (\n                        <i\n                          className='fas fa-times'\n                          style={{ color: 'red' }}\n                        ></i>\n                      )}\n                    </td>\n                    <td>\n                      <Button\n                        variant='light'\n                        className='btn-sm'\n                        onClick={() => restoreHandler(user._id)}\n                      >\n                        <i class='fa-solid fa-rotate-left'></i>\n                      </Button>\n                      <Button\n                        variant='danger'\n                        className='btn-sm'\n                        onClick={() => forceHandler(user._id)}\n                      >\n                        <i className='fas fa-trash'></i>\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default UserTrashScreen\n","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/OrderScreen.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/ProductTrashScreen.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/AddProductScreen.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/UserEditScreen.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/ProductEditScreen.js",["211","212","213","214","215","216","217","218"],"import React, { useState, useEffect } from 'react'\nimport { MDBDataTable } from 'mdbreact'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Row, Col, ListGroup, Button, Form, Alert } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/message/Message'\nimport Loader from '../components/loader/Loader'\nimport formatVNDC from '../components/formatVNDC'\nimport RenderImage from '../components/RenderImages'\nimport {\n  PRODUCT_UPDATE_RESET,\n  DELETE_REVIEW_RESET,\n} from '../constants/productConstant'\nimport {\n  productDetail,\n  deleteReview,\n  updateProduct,\n  clearErrors,\n} from '../actions/productActions'\nimport { color } from '@mui/system'\n\nconst ProductEditScreen = ({ history, match }) => {\n  const productId = match.params.id\n  const [optionIndex, setToggleOptionIndex] = useState(0)\n  const [colorIndex, setToggleColorIndex] = useState(0)\n  const [price, setPrice] = useState(0)\n  const [stock, setStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [productOptions, setProductOptions] = useState({})\n  const [oldImages, setOldImages] = useState([])\n  const [images, setImages] = useState([])\n  const [imagesPreview, setImagesPreview] = useState([])\n  const dispatch = useDispatch()\n  const { loading, error, product, reviews } = useSelector(\n    (state) => state.productDetail\n  )\n  const {\n    loading: loadingUpdate,\n    success: successUpdate,\n    error: errorUpdate,\n    product: productUpdate,\n  } = useSelector((state) => state.productUpdate)\n  const { error: deleteError, isDeleted } = useSelector(\n    (state) => state.productReviewDelete\n  )\n  const AlertMessage = (status, message) => {\n    return (\n      <>\n        <Alert key={status} variant={status}>\n          {message}\n        </Alert>\n      </>\n    )\n  }\n  useEffect(() => {\n    if (errorUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n    }\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      dispatch(productDetail(productId))\n    } else {\n      if (\n        !product.name ||\n        product._id !== productId ||\n        isDeleted ||\n        deleteError\n      ) {\n        dispatch({ type: DELETE_REVIEW_RESET })\n        dispatch(clearErrors())\n        dispatch(productDetail(productId))\n      } else {\n        setStock(product.productOptions[0].colors[0].quantity)\n        setPrice(product.productOptions[0].price)\n        setDescription(product.description)\n        setOldImages(product.productOptions[0].colors[0].images)\n        setProductOptions(JSON.parse(JSON.stringify(product.productOptions)))\n        setImagesPreview(product.productOptions[0].colors[0].images)\n      }\n    }\n  }, [\n    dispatch,\n    productId,\n    product,\n    successUpdate,\n    errorUpdate,\n    history,\n    isDeleted,\n    deleteError,\n  ])\n  const toggleOptionHandler = (index) => {\n    setToggleOptionIndex(index)\n    setToggleColorIndex(0)\n    setStock(productOptions[index].colors[0].quantity)\n    setPrice(productOptions[index].price)\n    setImagesPreview(productOptions[index].colors[0].images)\n    setOldImages(product.productOptions[index].colors[0].images)\n  }\n  const toggleColorHandler = (index) => {\n    setToggleColorIndex(index)\n    setImagesPreview(productOptions[optionIndex].colors[index].images)\n    setStock(productOptions[optionIndex].colors[index].quantity)\n    setOldImages(product.productOptions[optionIndex].colors[index].images)\n  }\n  const onChange = (e) => {\n    const files = Array.from(e.target.files)\n    setImagesPreview([])\n    // setImages([])\n    productOptions[optionIndex].colors[colorIndex].images = []\n    files.forEach((file) => {\n      const reader = new FileReader()\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setImagesPreview((oldArray) => [\n            ...oldArray,\n            { urlImage: reader.result },\n          ])\n          productOptions[optionIndex].colors[colorIndex].images.push({\n            urlImage: reader.result,\n          })\n          if (!productOptions[optionIndex].colors[colorIndex].onChange) {\n            productOptions[optionIndex].colors[colorIndex].onChange = true\n          }\n\n          // setImages((oldArray) => [...oldArray, { urlImage: reader.result }])\n        }\n      }\n\n      reader.readAsDataURL(file)\n    })\n  }\n  const deleteReviewHandler = (reviewId) => {\n    dispatch(deleteReview(reviewId, productId))\n  }\n  const setReviews = () => {\n    const data = {\n      columns: [\n        {\n          label: 'Review ID',\n          field: 'id',\n          sort: 'asc',\n        },\n        {\n          label: 'Rating',\n          field: 'rating',\n          sort: 'asc',\n        },\n        {\n          label: 'Comment',\n          field: 'comment',\n          sort: 'asc',\n        },\n        {\n          label: 'User',\n          field: 'user',\n          sort: 'asc',\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n        },\n      ],\n      rows: [],\n    }\n\n    reviews.forEach((review) => {\n      data.rows.push({\n        id: review._id,\n        rating: review.rating,\n        comment: review.comment,\n        user: review.name,\n\n        actions: (\n          <button\n            className='btn btn-danger py-1 px-2 ml-2'\n            onClick={() => deleteReviewHandler(review._id)}\n          >\n            <i className='fa fa-trash'></i>\n          </button>\n        ),\n      })\n    })\n\n    return data\n  }\n  const setStockHandler = (value) => {\n    setStock(value)\n    productOptions[optionIndex].colors[colorIndex].quantity = value\n  }\n  const setPriceHandler = (value) => {\n    setPrice(value)\n    productOptions[optionIndex].price = value\n  }\n  const submitHandler = (e) => {\n    e.preventDefault()\n    const formData = new Object()\n    formData.name = product.name\n    formData.description = description\n    formData.productOptions = productOptions\n    dispatch(updateProduct(product._id, formData))\n  }\n  return (\n    <>\n      <LinkContainer className='my-3' to='/products'>\n        <Button className='btn' variant='cyan'>\n          Go Back\n        </Button>\n      </LinkContainer>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : loadingUpdate ? (\n        <Loader />\n      ) : errorUpdate ? (\n        <Message variant='danger'> {errorUpdate}</Message>\n      ) : (\n        <Form onSubmit={submitHandler}>\n          <Row>\n            {' '}\n            <Col md={8}>\n              {imagesPreview && (\n                <RenderImage images={imagesPreview && imagesPreview} />\n              )}\n            </Col>\n            <Col md={4}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    {product.productOptions &&\n                      product.productOptions.map((option, index) => (\n                        <Col\n                          key={index}\n                          className={\n                            optionIndex === index\n                              ? 'list-group-item active rounded'\n                              : 'list-group-item-action'\n                          }\n                          style={{\n                            cursor: 'pointer',\n                          }}\n                          onClick={() => toggleOptionHandler(index)}\n                        >\n                          <i className='fas '>{option.productOptionName}</i>\n                        </Col>\n                      ))}\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    {product.productOptions &&\n                      product.productOptions[optionIndex].colors.map(\n                        (color, index) => (\n                          <Col\n                            key={index}\n                            className={\n                              colorIndex === index\n                                ? 'list-group-item active rounded'\n                                : 'list-group-item-action'\n                            }\n                            style={{\n                              cursor: 'pointer',\n                            }}\n                            onClick={() => toggleColorHandler(index)}\n                          >\n                            <h6>{color.color}</h6>\n                          </Col>\n                        )\n                      )}\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col md={4}>\n                      <label htmlFor='stock_field'>Stock</label>\n                    </Col>\n                    <Col>\n                      <input\n                        type='number'\n                        className='form-control count d-inline'\n                        value={stock}\n                        onChange={(e) => setStockHandler(e.target.value)}\n                      />\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  Price :{' '}\n                  <input\n                    type='text'\n                    className='form-control count d-inline'\n                    value={price}\n                    onChange={(e) => setPriceHandler(e.target.value)}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} review`}\n                    color=\"'#f8e825'\"\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <h5> Description :</h5>\n\n                  <textarea\n                    className='form-control'\n                    id='description_field'\n                    rows='4'\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                  ></textarea>\n                  {/* Description : <input/> {product.description} */}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <ListGroup>\n              <Col md={12}>\n                <ListGroup>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col md={2}>\n                        <label>Images</label>\n                      </Col>\n                      <Col>\n                        <div className='custom-file'>\n                          <input\n                            type='file'\n                            name='product_images'\n                            className='input-group mb-3'\n                            id='customFile'\n                            onChange={onChange}\n                            multiple\n                          />\n                        </div>\n                      </Col>\n                      <Col md={4}>\n                        <label\n                          className='custom-file-label'\n                          htmlFor='customFile'\n                        >\n                          Chọn ảnh thay thế\n                        </label>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Col>\n            </ListGroup>\n            {imagesPreview.length > 0 && (\n              <ListGroup>\n                <Col md={12}>\n                  <Row>\n                    {imagesPreview.map((img, index) => (\n                      <img\n                        src={img.urlImage}\n                        key={index}\n                        alt='Images Preview'\n                        className='d-block w-25'\n                      />\n                    ))}\n                    {/* <RenderImage images={imagesPreview} percent={50} /> */}\n                    {/* <Carousel pause='hover'>\n                {imagesPreview &&\n                  imagesPreview.map((image) => (\n                    <Carousel.Item key={image.public_id}>\n                      <img\n                        className='d-block w-100'\n                        src={image.url}\n                        alt={product.title}\n                      />\n                    </Carousel.Item>\n                  ))}\n              </Carousel> */}\n                  </Row>\n                </Col>\n              </ListGroup>\n            )}\n            {/* <ListGroup>\n            <Col md={8}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  Description : {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </ListGroup> */}\n            <ListGroup>\n              <Col md={12}>\n                <ListGroup.Item>\n                  {reviews && reviews.length > 0 ? (\n                    <MDBDataTable\n                      data={setReviews()}\n                      className='px-3'\n                      bordered\n                      striped\n                      hover\n                    />\n                  ) : (\n                    <p className='mt-5 text-center'>No Reviews.</p>\n                  )}\n                </ListGroup.Item>\n              </Col>\n            </ListGroup>\n          </Row>\n          <Row>\n            <ListGroup>\n              <Col md={12}>\n                <ListGroup.Item className='d-grid'>\n                  <Button type='submit' variant='cyan' className='btn'>\n                    UPDATE\n                  </Button>\n                </ListGroup.Item>\n              </Col>\n            </ListGroup>\n          </Row>\n        </Form>\n      )}\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/AnalyticsScreen.js",["219","220","221","222","223","224","225","226"],"import React, { useEffect } from 'react'\nimport Chart from 'react-apexcharts'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col, Nav, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/message/Message'\nimport Loader from '../components/loader/Loader'\n\nconst chartOptions = {\n  series: [\n    {\n      name: 'Online Customers',\n      data: [40, 70, 20, 90, 36, 80, 30, 91, 60],\n    },\n    {\n      name: 'Store Customers',\n      data: [40, 30, 70, 80, 40, 16, 40, 20, 51],\n    },\n  ],\n  options: {\n    color: ['#6ab04c', '#2980b9'],\n    chart: {\n      background: 'transparent',\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    stroke: {\n      curve: 'smooth',\n    },\n    xaxis: {\n      categories: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n      ],\n    },\n    legend: {\n      position: 'top',\n    },\n    grid: {\n      show: false,\n    },\n  },\n}\nconst AnalyticsScreen = ({ history, match }) => {\n  const dispatch = useDispatch()\n  const themeReducer = useSelector((state) => state.ThemeReducer.mode)\n  return (\n    <>\n      <Row>\n        <Col>\n          <Card>\n            <Chart\n              options={\n                themeReducer === 'theme-mode-dark'\n                  ? {\n                      ...chartOptions.options,\n                      theme: { mode: 'dark' },\n                    }\n                  : {\n                      ...chartOptions.options,\n                      theme: { mode: 'light' },\n                    }\n              }\n              series={chartOptions.series}\n              type='line'\n            />\n          </Card>\n        </Col>\n        <Col>\n          <Card>\n            <Chart\n              options={\n                themeReducer === 'theme-mode-dark'\n                  ? {\n                      ...chartOptions.options,\n                      theme: { mode: 'dark' },\n                    }\n                  : {\n                      ...chartOptions.options,\n                      theme: { mode: 'light' },\n                    }\n              }\n              series={chartOptions.series}\n              type='line'\n            />\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Card>\n            <Chart\n              options={\n                themeReducer === 'theme-mode-dark'\n                  ? {\n                      ...chartOptions.options,\n                      theme: { mode: 'dark' },\n                    }\n                  : {\n                      ...chartOptions.options,\n                      theme: { mode: 'light' },\n                    }\n              }\n              series={chartOptions.series}\n              type='line'\n            />\n          </Card>\n        </Col>\n        <Col>\n          <Card>\n            <Chart\n              options={\n                themeReducer === 'theme-mode-dark'\n                  ? {\n                      ...chartOptions.options,\n                      theme: { mode: 'dark' },\n                    }\n                  : {\n                      ...chartOptions.options,\n                      theme: { mode: 'light' },\n                    }\n              }\n              series={chartOptions.series}\n              type='line'\n            />\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\nexport default AnalyticsScreen\n","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/pages/Dashboard.jsx",["227"],"import React, {useEffect} from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport Chart from 'react-apexcharts'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport StatusCard from '../components/status-card/StatusCard'\n\nimport Table from '../components/table/Table'\n\nimport Badge from '../components/badge/Badge'\n\nimport { getCards,getLastOrders,getTopOrders } from '../actions/dashboardActions'\nconst chartOptions = {\n    series: [{\n        name: 'Online Customers',\n        data: [40,70,20,90,36,80,30,91,60]\n    }, {\n        name: 'Store Customers',\n        data: [40, 30, 70, 80, 40, 16, 40, 20, 51]\n    }],\n    options: {\n        color: ['#6ab04c', '#2980b9'],\n        chart: {\n            background: 'transparent'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth'\n        },\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n        },\n        legend: {\n            position: 'top'\n        },\n        grid: {\n            show: false\n        }\n    }\n}\n\nconst topCustomers = {\n    head: [\n        'user',\n        'total orders',\n        'total spending'\n    ],\n    body: [\n        {\n            \"username\": \"john doe\",\n            \"order\": \"490\",\n            \"price\": \"$15,870\"\n        },\n        {\n            \"username\": \"frank iva\",\n            \"order\": \"250\",\n            \"price\": \"$12,251\"\n        },\n        {\n            \"username\": \"anthony baker\",\n            \"order\": \"120\",\n            \"price\": \"$10,840\"\n        },\n        {\n            \"username\": \"frank iva\",\n            \"order\": \"110\",\n            \"price\": \"$9,251\"\n        },\n        {\n            \"username\": \"anthony baker\",\n            \"order\": \"80\",\n            \"price\": \"$8,840\"\n        }\n    ]\n}\n\nconst renderCusomerHead = (item, index) => (\n    <th key={index}>{item}</th>\n)\n\nconst renderCusomerBody = (item, index) => (\n    <tr key={index}>\n        <td>{item._id[0].name}</td>\n        <td>{item.countOrder}</td>\n        <td>{item.sumTotalPrice}</td>\n    </tr>\n)\n\nconst latestOrders = {\n    header: [\n        \"order id\",\n        \"user\",\n        \"total price\",\n        \"date\",\n        \"status\"\n    ],\n    body: [\n        {\n            id: \"#OD1711\",\n            user: \"john doe\",\n            date: \"17 Jun 2021\",\n            price: \"$900\",\n            status: \"shipping\"\n        },\n        {\n            id: \"#OD1712\",\n            user: \"frank iva\",\n            date: \"1 Jun 2021\",\n            price: \"$400\",\n            status: \"paid\"\n        },\n        {\n            id: \"#OD1713\",\n            user: \"anthony baker\",\n            date: \"27 Jun 2021\",\n            price: \"$200\",\n            status: \"pending\"\n        },\n        {\n            id: \"#OD1712\",\n            user: \"frank iva\",\n            date: \"1 Jun 2021\",\n            price: \"$400\",\n            status: \"paid\"\n        },\n        {\n            id: \"#OD1713\",\n            user: \"anthony baker\",\n            date: \"27 Jun 2021\",\n            price: \"$200\",\n            status: \"refund\"\n        }\n    ]\n}\n\nconst orderStatus = {\n    \"shipping\": \"primary\",\n    \"pending\": \"warning\",\n    \"paid\": \"success\",\n    \"refund\": \"danger\",\n    \"Shipping\": \"primary\",\n    \"Pending\": \"warning\",\n    \"Paid\": \"success\",\n    \"Refund\": \"danger\",\n    shipped: 'success',    \n    Shipped: 'success',}\n\nconst renderOrderHead = (item, index) => (\n    <th key={index}>{item}</th>\n)\n\nconst renderOrderBody = (item, index) => (\n    <tr key={index}>\n        <td>{index}</td>\n        <td>{item.user[0].name}</td>\n        <td>{item.totalPrice}</td>\n        <td>{item.createdAt}</td>\n        <td>\n            <Badge  type={orderStatus[item.status.statusNow]} content={item.status.statusNow}/>\n        </td>\n    </tr>\n)\n\nconst Dashboard = () => {\n    const dispatch = useDispatch()\n    const themeReducer = useSelector(state => state.ThemeReducer.mode)\n    const cardsReducer = useSelector((state) => state.cardsReducer)\n    const { cards } = cardsReducer\n    const {users} =useSelector((state)=>state.topOrder)\n    const {orders} =useSelector((state)=>state.lastOrder)\n    useEffect(() => {\n        dispatch(getCards())\n        dispatch(getLastOrders())\n        dispatch(getTopOrders())\n      }, [])\n    return (\n        <div>\n            <h2 className=\"page-header\">Dashboard</h2>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <div className=\"row\">\n                        { cards&&cards.map((item,index)=>(\n                            <div className=\"col-6\" key={index}>\n                                <StatusCard\n                                 icon={item.icon}\n                                 count={item.count}\n                                 title={item.title}\n                                />\n                            </div>\n                        ))\n                        }\n                    </div>\n                </div>\n                <div className=\"col-6\">\n                    <div className=\"card full-height\">\n                        {/* chart */}\n                        <Chart\n                            options={themeReducer === 'theme-mode-dark' ? {\n                                ...chartOptions.options,\n                                theme: { mode: 'dark'}\n                            } : {\n                                ...chartOptions.options,\n                                theme: { mode: 'light'}\n                            }}\n                            series={chartOptions.series}\n                            type='line'\n                            height='100%'\n                        />\n                    </div>\n                </div>\n                <div className=\"col-4\">\n                    <div className=\"card\">\n                        <div className=\"card__header\">\n                            <h3>top customers</h3>\n                        </div>\n                        <div className=\"card__body\">\n                            {users&&\n                                 <Table\n                                 headData={topCustomers.head}\n                                 renderHead={(item, index) => renderCusomerHead(item, index)}\n                                 bodyData={users}\n                                 renderBody={(item, index) => renderCusomerBody(item, index)}\n                             />\n                            }\n                       \n                        </div>\n                        <div className=\"card__footer\">\n                            <Link to='/customers'>view all</Link>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-8\">\n                    <div className=\"card\">\n                        <div className=\"card__header\">\n                            <h3>latest orders</h3>\n                        </div>\n                        <div className=\"card__body\">\n                            {orders&&\n                                <Table\n                                headData={latestOrders.header}\n                                renderHead={(item, index) => renderOrderHead(item, index)}\n                                bodyData={orders}\n                                renderBody={(item, index) => renderOrderBody(item, index)}\n                            />\n                            }\n              \n                        </div>\n                        <div className=\"card__footer\">\n                            <Link to='/orders'>view all</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard","/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/thememenu/ThemeMenu.jsx",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/dropdown/Dropdown.jsx",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/FormContainer.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/actions/orderActions.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/StatusSteps.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/Rating.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/actions/productActions.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/RenderImages.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/formatVNDC.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/loader/Loader.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/message/Message.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/Paginates/PaginateOrder.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/Paginates/PaginateProduct.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/Paginates/PaginateUser.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/Paginates/PaginateTrashUser.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/Paginates/PaginateTrashProduct.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/actions/dashboardActions.js",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/badge/Badge.jsx",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/status-card/StatusCard.jsx",[],"/Applications/STUDY/TLCN/Admin/BE-admin/admin/src/components/table/Table.jsx",[],{"ruleId":"228","severity":1,"message":"229","line":24,"column":6,"nodeType":"230","endLine":24,"endColumn":50,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":13,"column":3,"nodeType":"234","messageId":"235","endLine":13,"endColumn":16},{"ruleId":"228","severity":1,"message":"229","line":30,"column":6,"nodeType":"230","endLine":30,"endColumn":65,"suggestions":"236"},{"ruleId":"232","severity":1,"message":"237","line":9,"column":8,"nodeType":"234","messageId":"235","endLine":9,"endColumn":18},{"ruleId":"232","severity":1,"message":"238","line":21,"column":10,"nodeType":"234","messageId":"235","endLine":21,"endColumn":15},{"ruleId":"232","severity":1,"message":"239","line":31,"column":10,"nodeType":"234","messageId":"235","endLine":31,"endColumn":19},{"ruleId":"232","severity":1,"message":"240","line":32,"column":10,"nodeType":"234","messageId":"235","endLine":32,"endColumn":16},{"ruleId":"232","severity":1,"message":"241","line":32,"column":18,"nodeType":"234","messageId":"235","endLine":32,"endColumn":27},{"ruleId":"232","severity":1,"message":"242","line":42,"column":14,"nodeType":"234","messageId":"235","endLine":42,"endColumn":27},{"ruleId":"232","severity":1,"message":"243","line":47,"column":9,"nodeType":"234","messageId":"235","endLine":47,"endColumn":21},{"ruleId":"244","severity":1,"message":"245","line":197,"column":22,"nodeType":"246","messageId":"247","endLine":197,"endColumn":34},{"ruleId":"232","severity":1,"message":"248","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":26},{"ruleId":"232","severity":1,"message":"249","line":3,"column":10,"nodeType":"234","messageId":"235","endLine":3,"endColumn":23},{"ruleId":"232","severity":1,"message":"250","line":4,"column":10,"nodeType":"234","messageId":"235","endLine":4,"endColumn":15},{"ruleId":"232","severity":1,"message":"251","line":4,"column":17,"nodeType":"234","messageId":"235","endLine":4,"endColumn":23},{"ruleId":"232","severity":1,"message":"252","line":4,"column":35,"nodeType":"234","messageId":"235","endLine":4,"endColumn":38},{"ruleId":"232","severity":1,"message":"253","line":6,"column":8,"nodeType":"234","messageId":"235","endLine":6,"endColumn":15},{"ruleId":"232","severity":1,"message":"254","line":7,"column":8,"nodeType":"234","messageId":"235","endLine":7,"endColumn":14},{"ruleId":"232","severity":1,"message":"255","line":53,"column":9,"nodeType":"234","messageId":"235","endLine":53,"endColumn":17},{"ruleId":"228","severity":1,"message":"256","line":180,"column":10,"nodeType":"230","endLine":180,"endColumn":12,"suggestions":"257"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pageNumber'. Either include it or remove the dependency array.","ArrayExpression",["258"],"no-unused-vars","'createProduct' is defined but never used.","Identifier","unusedVar",["259"],"'formatVNDC' is defined but never used.","'color' is defined but never used.","'oldImages' is assigned a value but never used.","'images' is assigned a value but never used.","'setImages' is assigned a value but never used.","'productUpdate' is assigned a value but never used.","'AlertMessage' is assigned a value but never used.","no-new-object","The object literal notation {} is preferrable.","NewExpression","preferLiteral","'useEffect' is defined but never used.","'LinkContainer' is defined but never used.","'Table' is defined but never used.","'Button' is defined but never used.","'Nav' is defined but never used.","'Message' is defined but never used.","'Loader' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["260"],{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [dispatch, history, pageNumber, successDelete, userInfo]",{"range":"267","text":"268"},"Update the dependencies array to be: [dispatch, history, userInfo, successRestore, successForce, pageNumber]",{"range":"269","text":"270"},"Update the dependencies array to be: [dispatch]",{"range":"271","text":"272"},[1051,1095],"[dispatch, history, pageNumber, successDelete, userInfo]",[1216,1275],"[dispatch, history, userInfo, successRestore, successForce, pageNumber]",[4244,4246],"[dispatch]"]